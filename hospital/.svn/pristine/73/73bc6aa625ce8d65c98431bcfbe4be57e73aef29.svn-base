package com.example.ehs.xmpphelper;

import java.util.List;
import java.util.Random;

import org.jivesoftware.smack.Chat;
import org.jivesoftware.smack.XMPPException;
import org.jivesoftware.smack.packet.Message;

import com.example.ehs.model.Friends;
import com.example.ehs.model.IMMessage;
import com.example.ehs.utils.ConnectionUtils;

import android.app.Notification;
import android.app.NotificationManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
/*
 * 自定义聊天界面抽象类
 * 需要实现
 * */
public abstract class AChatActivity extends BaseActivity {

	private Chat chat = null;
	private List<IMMessage> message_pool = null;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	//	String to = getIntent().getStringExtra("to");
		Bundle b = getIntent().getBundleExtra("info");
		String style = b.getString("style");
		//String name = b.getString("name");
		Friends friends = b.getParcelable("friends");
		//if (name == null)
		if(friends == null)
			return;
		//String threadId = MChatManager.chatThreads.get(name);
		String threadId = MChatManager.chatThreads.get(friends.getJID());
		chat = ConnectionUtils.getConnection(this).getChatManager()
				.getThreadChat(threadId);
		if (chat == null) {
			//chat = ConnectionUtils.getConnection(this).getChatManager()
					//.createChat(name, null);
			chat = ConnectionUtils.getConnection(this).getChatManager()
					.createChat(friends.getJID(), null);
		}
		//message_pool = MChatManager.getMessages(name);
		message_pool = MChatManager.getMessages(friends.getJID());
	}

	@Override
	protected void onPause() {
		unregisterReceiver(receiver);
		super.onPause();
	}

	@Override
	protected void onResume() {
		IntentFilter filter = new IntentFilter();
		filter.addAction(Constant.NEW_MESSAGE_ACTION);
		registerReceiver(receiver, filter);
		super.onResume();
	}

	private BroadcastReceiver receiver = new BroadcastReceiver() {

		@Override
		public void onReceive(Context context, Intent intent) {

			if (Constant.NEW_MESSAGE_ACTION.equals(intent.getAction())) {
				NotificationManager mgr = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
					  Notification nt = new Notification();
					  nt.defaults = Notification.DEFAULT_SOUND;
					  int soundId = new Random(System.currentTimeMillis()).nextInt(Integer.MAX_VALUE);
					  mgr.notify(soundId, nt);
			    
				IMMessage message = intent
						.getParcelableExtra(IMMessage.IMMESSAGE_KEY);
				System.out.println("Achat---"+message.getChatMode());
				message_pool.add(message);
				receiveNewMessage(message);
				refreshMessage(message_pool);
			}
		}
	};

	protected abstract void receiveNewMessage(IMMessage message);

	protected abstract void refreshMessage(List<IMMessage> messages);

	protected List<IMMessage> getMessages() {
		return message_pool;
	}
//发送消息分文：文字（表情）消息，图片消息，语音消息，视频消息，分别对应0,1,2,3
	protected void sendMessage(String messageContent,int type) {
		try {
			String time = ConnectionUtils.getStringTime();
			Message message = new Message();
			message.setProperty(IMMessage.KEY_TIME, time);
			message.setBody(messageContent);
			chat.sendMessage(message);
			
			IMMessage newMessage = new IMMessage();
			newMessage.setMsgType(1);
			newMessage.setFromSubJid(chat.getParticipant());
			newMessage.setContent(messageContent);
			newMessage.setTime(time);
			newMessage.setChatMode(type);
		
			message_pool.add(newMessage);
			MChatManager.message_pool.add(newMessage);
			// 刷新视图
			refreshMessage(message_pool);
		} catch (XMPPException e) {
			e.printStackTrace();
		}
	}

}
