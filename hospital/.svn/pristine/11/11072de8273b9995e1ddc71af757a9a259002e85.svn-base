package com.example.ehs.setting;

import java.io.File;
import java.util.HashMap;
import java.util.List;

import org.jivesoftware.smack.packet.Presence;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.media.AudioManager;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;

import com.example.ehs.LoginActivity;
import com.example.ehs.R;
import com.example.ehs.model.UserInfo;
import com.example.ehs.utils.ConnectionUtils;
/*
 * 设置模块
 * */
public class SettingActivity extends Activity implements OnClickListener{
	private TextView titleView;
	private Button leftBtView;
//	private Button rightBtView;
	private com.example.ehs.widget.ImageTxSpinner myStateView;
	private com.example.ehs.widget.My2TextButton aboutAppView;
	private com.example.ehs.widget.My2TextButton voiceView;//接收消息的声音
	private com.example.ehs.widget.My2TextButton resetPswdView;
	private com.example.ehs.widget.My2TextButton logoutView;
	private Button exitView;
	private Spinner spinner;
	
	UserInfo userInfo=null;
	private String[] items = new String[]{"铃声","振动","静音"};
	private static final int states[]={R.drawable.f000,R.drawable.f001,R.drawable.f002,R.drawable.f003,
		R.drawable.f004};//状态图
	private String[] stateStrs = {"在线","空闲","离开","忙碌","请勿打扰"};
	private List<HashMap<String, String>> list=null;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.setting);
		userInfo = new UserInfo(this);
		setUpView();
	}

	private void setUpView() {
		titleView = (TextView)findViewById(R.id.title);
		leftBtView = (Button)findViewById(R.id.bt_left);
		//rightBtView = (Button)findViewById(R.id.bt_right);
		titleView.setText("设置");
		leftBtView.setVisibility(View.VISIBLE);
		leftBtView.setOnClickListener(this);
		
		myStateView = (com.example.ehs.widget.ImageTxSpinner)findViewById(R.id.my_account_info);
		//myStateView.setImageViewImg(id);
		myStateView.setTextViewTx(userInfo.getAccount());
		spinner = myStateView.getSpinner();
		MyAdapter adapter = new MyAdapter(states, stateStrs, SettingActivity.this);
		spinner.setAdapter(adapter);
		spinner.setSelection(0);
		spinner.setOnItemSelectedListener(new OnItemSelectedListener() {
			@Override
			public void onItemSelected(AdapterView<?> arg0, View v,
					int position, long arg3) {
				Presence presence = new Presence(Presence.Type.available);
				switch (position) {
				case 0://在线
					presence.setMode(org.jivesoftware.smack.packet.Presence.Mode.available);
					break;
				case 1://空闲
					presence.setMode(org.jivesoftware.smack.packet.Presence.Mode.chat);
					break;
				case 2://离开
					presence.setMode(org.jivesoftware.smack.packet.Presence.Mode.away);
					break;
				case 3://忙碌
					presence.setMode(org.jivesoftware.smack.packet.Presence.Mode.xa);
					break;
				case 4://请勿打扰
					presence.setMode(org.jivesoftware.smack.packet.Presence.Mode.dnd);
					break;
				default:
					break;
				}
				ConnectionUtils.getConnection(SettingActivity.this).sendPacket(presence);
				TextView label = (TextView) v.findViewById(R.id.label);  
				label.setVisibility(View.GONE);
			}
			@Override
			public void onNothingSelected(AdapterView<?> arg0) {
				// TODO Auto-generated method stub
				
			}
		});
		
		aboutAppView = (com.example.ehs.widget.My2TextButton)findViewById(R.id.about_app);
		aboutAppView.setTextView1Text("应用简介");
		aboutAppView.setTextView2Text(">");
		aboutAppView.setOnClickListener(this);
		
		voiceView = (com.example.ehs.widget.My2TextButton)findViewById(R.id.setting_voice);
		voiceView.setTextView1Text("声音设置");
		voiceView.setTextView2Text(">");
		voiceView.setOnClickListener(this);
		
		resetPswdView = (com.example.ehs.widget.My2TextButton)findViewById(R.id.reset_pswd);
		resetPswdView.setTextView1Text("修改密码");
		resetPswdView.setTextView2Text(">");
		resetPswdView.setOnClickListener(this);
		
		logoutView = (com.example.ehs.widget.My2TextButton)findViewById(R.id.logout);
		logoutView.setTextView1Text("注销登陆");
		logoutView.setTextView2Text(">");
		logoutView.setOnClickListener(this);
		
		exitView = (Button)findViewById(R.id.exit_account);
		exitView.setOnClickListener(this);
	}
	
	private class MyAdapter extends BaseAdapter{
		private int[] states; 
		private String[] stateStrs;
		private Context mContext;  
		
		public MyAdapter(int[] states, String[] stateStrs, Context mContext) {
			super();
			this.states = states;
			this.stateStrs = stateStrs;
			this.mContext = mContext;
		}
		@Override
		public int getCount() {
			return states.length;
		}
		@Override
		public Object getItem(int arg0) {
			return states[arg0];
		}
		@Override
		public long getItemId(int arg0) {
			return arg0;
		}
		@Override
		public View getView(int position, View v, ViewGroup arg2) {
			 LayoutInflater _LayoutInflater=LayoutInflater.from(mContext);  
			 v =_LayoutInflater.inflate(R.layout.my_spinner, null);  
			 if(v!=null){
				 ImageView img = (ImageView)v.findViewById(R.id.icon);
				 TextView label = (TextView) v.findViewById(R.id.label); 
				 img.setImageResource(states[position]);
				 label.setText(stateStrs[position]);
			 }
			 return v;
		}
		
	} 
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.bt_left:
			this.finish();
			break;
		case R.id.about_app:
			Intent i1 = new Intent();
			i1.setClass(SettingActivity.this, AboutAppActivity.class);
			startActivity(i1);
			break;
		case R.id.setting_voice:
			final AudioManager audioManager = (AudioManager)getSystemService(Context.AUDIO_SERVICE);
			new AlertDialog.Builder(this).setTitle("声音模式").setItems(items,new DialogInterface.OnClickListener() {			
				@Override
				public void onClick(DialogInterface dialog, int which) {
					switch (which) {
	                case 0:
	                	audioManager.setRingerMode(AudioManager.RINGER_MODE_NORMAL);
	                        break;
	                case 1:
	                	audioManager.setRingerMode(AudioManager.RINGER_MODE_VIBRATE);	
	                        break;
	                case 2:
	                	audioManager.setRingerMode(AudioManager.RINGER_MODE_SILENT);
	                		break;
	                default:
	                	break;
						}
				}
			}).setNegativeButton("取消", new DialogInterface.OnClickListener() {
	        @Override
	        public void onClick(DialogInterface dialog, int which) {
	                dialog.dismiss();
	        	}
			}).show();
			break;
		case R.id.reset_pswd:
			Intent i2 = new Intent();
			i2.setClass(SettingActivity.this, ResetPswdActivity.class);
			startActivity(i2);
			break;
		case R.id.logout:
			new AlertDialog.Builder(SettingActivity.this)
			.setTitle("提示")
			.setMessage("确认要注销用户吗?")
			.setPositiveButton("确定", new DialogInterface.OnClickListener() {				
				@Override
				public void onClick(DialogInterface dialog, int which) {
					userInfo.setAutoLogin(false);
					userInfo.setSavePswd(false);
					userInfo.setUserAccount("");
					userInfo.setUserPswd("");
					Intent intent4 = new Intent();
					intent4.setClass(SettingActivity.this, LoginActivity.class);
					startActivity(intent4);
					SettingActivity.this.finish();
				}
			})
			.setNegativeButton("取消", new DialogInterface.OnClickListener() {				
				@Override
				public void onClick(DialogInterface dialog, int which) {
				
				}
			}).create().show();
			break;
		case R.id.exit_account:
			new AlertDialog.Builder(SettingActivity.this)
			.setTitle("提示")
			.setMessage("确认要退出应用吗?")
			.setPositiveButton("确定", new DialogInterface.OnClickListener() {				
				@Override
				public void onClick(DialogInterface dialog, int which) {
					System.exit(0);
				}
			})
			.setNegativeButton("取消", new DialogInterface.OnClickListener() {				
				@Override
				public void onClick(DialogInterface dialog, int which) {
				
				}
			}).create().show();
			break;
		default:
			break;
		}
	}

}

