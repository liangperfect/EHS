package com.example.ehs.order;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Spinner;
import android.widget.Toast;

import com.example.ehs.R;
import com.example.ehs.model.FoodInfo;
import com.example.ehs.xmpphelper.ContacterManager.MRosterGroup;
/*
 * µã²ÍÄ£¿é²Ëµ¥ÏÔÊ¾½çÃæ
 * */
public class MealMenuActivity extends Activity{
	private Spinner menuSpinner;
	private ListView menuListView;
	
	private static final String items[]={"ËùÓĞ","Ö÷Ê³","Ğ¡³Ô","Ì×²Í","Ôç²Í","ÒûÁÏ","ÌÀ²Ë","ÆäËû"};
	private ArrayAdapter<String> spinner_adapter=null;
	private SimpleAdapter list_adapter=null;
	private List<HashMap<String, Object>> menuList=null;
	private HashMap<String, Object> nemuMap=null;
	private FoodInfo foodInfo=null;
	
    private static final int ALL_MENU = 0;
    private static final int MAIN_MENU = 1;
    private static final int MINI_MENU = 2;
    private static final int COUPLE_MENU = 3;
    private static final int BREAKFEST_MENU = 4;
    private static final int DRINK_MENU = 5;
    private static final int SOUP_MENU = 6;
    private static final int OTHER_MENU = 7;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.meal_menu);
		menuList = getList(ALL_MENU);
		System.out.println("menuList length="+menuList.size());
		init();
	}

	private void init() {
		menuSpinner = (Spinner)findViewById(R.id.menu_spinner);
		menuListView = (ListView)findViewById(R.id.menu_list);
		
		spinner_adapter=new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, items);
		menuSpinner.setAdapter(spinner_adapter);
		menuSpinner.setOnItemSelectedListener(new OnItemSelectedListener()
		{
			@Override
			public void onItemSelected(AdapterView<?> arg0, View v,
					int position, long arg3) {
				switch (position) {
				case 0://ËùÓĞ
					menuList = getList(ALL_MENU);
					list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
							new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
					menuListView.setAdapter(list_adapter);
					break;
				case 1://Ö÷Ê³
					menuList = getList(MAIN_MENU);
					list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
							new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
					menuListView.setAdapter(list_adapter);
					break;
				case 2://Ğ¡³Ô
					menuList = getList(MINI_MENU);
					list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
							new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
					menuListView.setAdapter(list_adapter);
					break;
				case 3://Ì×²Í
					menuList = getList(COUPLE_MENU);
					list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
							new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
					menuListView.setAdapter(list_adapter);
					break;
				case 4://Ôç²Í
					menuList = getList(BREAKFEST_MENU);
					list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
							new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
					menuListView.setAdapter(list_adapter);
					break;
				case 5://ÒûÁÏ
					menuList = getList(DRINK_MENU);
					list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
							new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
					menuListView.setAdapter(list_adapter);
					break;
				case 6://ÌÀÀà
					menuList = getList(SOUP_MENU);
					list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
							new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
					menuListView.setAdapter(list_adapter);
					break;
				case 7://ÆäËû
					menuList = getList(OTHER_MENU);
					list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
							new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
					menuListView.setAdapter(list_adapter);
					break;
				default:
					break;
				}
			}
			@Override
			public void onNothingSelected(AdapterView<?> arg0) {
			}
		});
		
		list_adapter = new SimpleAdapter(MealMenuActivity.this, menuList, R.layout.menu_item, 
				new String[]{"img","name","description","price"}, new int[]{R.id.menu_img,R.id.menu_name,R.id.menu_description,R.id.menu_price});
		menuListView.setAdapter(list_adapter);
		menuListView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> arg0, View v, int position,
					long arg3) {
				nemuMap = menuList.get(position);
			    Object imgStr = nemuMap.get("img");
			    System.out.println("imgStr="+imgStr);
			    System.out.println("caip="+R.drawable.cp_001);
				foodInfo = new FoodInfo((String)nemuMap.get("name"), imgStr.toString(), (String)nemuMap.get("description"), (String)nemuMap.get("price"), "", 0);
				Intent i = new Intent();
				i.setClass(MealMenuActivity.this, AMealInfoActivity.class);
				Bundle b = new Bundle();
				b.putParcelable("food", foodInfo);
				i.putExtra("foodBd", b);
				startActivity(i);
			}
		});
	}
	private List<HashMap<String, Object>> getList(int menuType) {
		List<HashMap<String, Object>> list=null;
		HashMap<String, Object> map = null;
		switch (menuType) {
		case ALL_MENU:
			list = new ArrayList<HashMap<String,Object>>();
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_001);
			map.put("name", "ÓãÏãÈâË¿");
			map.put("description", "ÃèÊö£ºÏã¡¢À±¡¢Ìğ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_002);
			map.put("name", "Ë®ÖóÈâÆ¬");
			map.put("description", "ÃèÊö£ºÏã¡¢À±¡¢ÏÊ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_003);
			map.put("name", "¹¬±£¼¦¶¡");
			map.put("description", "ÃèÊö£ºÏã¡¢À±¡¢Ìğ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_004);
			map.put("name", "ÄÏ¹Ï±ı");
			map.put("description", "ÃèÊö£ºÏã¡¢Ìğ");
			map.put("price", "10Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_005);
			map.put("name", "Ë¦±ı");
			map.put("description", "ÃèÊö£ºÏã¡¢´à");
			map.put("price", "10Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_006);
			map.put("name", "ÓñÃ×±ı");
			map.put("description", "ÃèÊö£ºÏã¡¢Ìğ");
			map.put("price", "10Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_007);
			map.put("name", "Ïã¹½»¬¼¦");
			map.put("description", "ÃèÊö£ºÏã¡¢ÄÛ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_008);
			map.put("name", "ºÚ½·Å£Èâ");
			map.put("description", "ÃèÊö£ºÏã¡¢À±¡¢Ìğ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_009);
			map.put("name", "À±×Ó¼¦¶¡");
			map.put("description", "ÃèÊö£ºÏã¡¢À±");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_010);
			map.put("name", "ÂøÍ·");
			map.put("description", "ÃèÊö£ºÈí£¬Ìğ");
			map.put("price", "1Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_011);
			map.put("name", "ÓÍÌõ");
			map.put("description", "ÃèÊö£ºÏã¡¢´à");
			map.put("price", "1Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_012);
			map.put("name", "Æ¤µ°ÊİÈâÖà");
			map.put("description", "ÃèÊö£ºÏã¡¢Èó");
			map.put("price", "2Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_013);
			map.put("name", "¿óÈªË®");
			map.put("description", "ÃèÊö£º½â¿Ê");
			map.put("price", "1Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_014);
			map.put("name", "±ùÌÇÑ©Àæ");
			map.put("description", "ÃèÊö£ºÖ¹¿È¡¢»¯Ìµ");
			map.put("price", "3Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_015);
			map.put("name", "¿ÉÀÖ");
			map.put("description", "ÃèÊö£º±ùÁ¹");
			map.put("price", "3Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_016);
			map.put("name", "Æ¤µ°Çà¹ÏÌÀ");
			map.put("description", "ÃèÊö£ºÇåÌ¸¡¢ÏÊÏã");
			map.put("price", "8Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_017);
			map.put("name", "·¬ÇÑ¼¦µ°ÌÀ");
			map.put("description", "ÃèÊö£ºÅ¨ÏãËÄÒç");
			map.put("price", "8Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_018);
			map.put("name", "ÓñÃ×ÅÅ¹ÇÌÀ");
			map.put("description", "ÃèÊö£ºÓªÑøÃÀÎ¶");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_019);
			map.put("name", "Á¹°èÈıË¿");
			map.put("description", "ÃèÊö£ºÂéÀ±");
			map.put("price", "10Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_020);
			map.put("name", "Öí¶ú¶ä");
			map.put("description", "ÃèÊö£ºÏã´à");
			map.put("price", "18Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_021);
			map.put("name", "Åİ½··ï×¦");
			map.put("description", "ÃèÊö£ºÓĞÓĞ");
			map.put("price", "15Ôª");
			list.add(map);
			break;
		case MAIN_MENU:
			list = new ArrayList<HashMap<String,Object>>();
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_001);
			map.put("name", "ÓãÏãÈâË¿");
			map.put("description", "ÃèÊö£ºÏã¡¢À±¡¢Ìğ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_002);
			map.put("name", "Ë®ÖóÈâÆ¬");
			map.put("description", "ÃèÊö£ºÏã¡¢À±¡¢ÏÊ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_003);
			map.put("name", "¹¬±£¼¦¶¡");
			map.put("description", "ÃèÊö£ºÏã¡¢À±¡¢Ìğ");
			map.put("price", "15Ôª");
			list.add(map);
			break;
		case MINI_MENU:
			list = new ArrayList<HashMap<String,Object>>();
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_004);
			map.put("name", "ÄÏ¹Ï±ı");
			map.put("description", "ÃèÊö£ºÏã¡¢Ìğ");
			map.put("price", "10Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_005);
			map.put("name", "Ë¦±ı");
			map.put("description", "ÃèÊö£ºÏã¡¢´à");
			map.put("price", "10Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_006);
			map.put("name", "ÓñÃ×±ı");
			map.put("description", "ÃèÊö£ºÏã¡¢Ìğ");
			map.put("price", "10Ôª");
			list.add(map);
			break;
		case COUPLE_MENU:
			list = new ArrayList<HashMap<String,Object>>();
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_007);
			map.put("name", "Ïã¹½»¬¼¦");
			map.put("description", "ÃèÊö£ºÏã¡¢ÄÛ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_008);
			map.put("name", "ºÚ½·Å£Èâ");
			map.put("description", "ÃèÊö£ºÏã¡¢À±¡¢Ìğ");
			map.put("price", "15Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_009);
			map.put("name", "À±×Ó¼¦¶¡Ì×²Í");
			map.put("description", "ÃèÊö£ºÏã¡¢À±");
			map.put("price", "15Ôª");
			list.add(map);
			break;
		case BREAKFEST_MENU:
			list = new ArrayList<HashMap<String,Object>>();
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_010);
			map.put("name", "ÂøÍ·");
			map.put("description", "ÃèÊö£ºÈí£¬Ìğ");
			map.put("price", "1Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_011);
			map.put("name", "ÓÍÌõ");
			map.put("description", "ÃèÊö£ºÏã¡¢´à");
			map.put("price", "1Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_012);
			map.put("name", "Æ¤µ°ÊİÈâÖà");
			map.put("description", "ÃèÊö£ºÏã¡¢Èó");
			map.put("price", "2Ôª");
			list.add(map);
			break;
		case DRINK_MENU:
			list = new ArrayList<HashMap<String,Object>>();
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_013);
			map.put("name", "¿óÈªË®");
			map.put("description", "ÃèÊö£º½â¿Ê");
			map.put("price", "1Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_014);
			map.put("name", "±ùÌÇÑ©Àæ");
			map.put("description", "ÃèÊö£ºÖ¹¿È¡¢»¯Ìµ");
			map.put("price", "3Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_015);
			map.put("name", "¿ÉÀÖ");
			map.put("description", "ÃèÊö£º±ùÁ¹");
			map.put("price", "3Ôª");
			list.add(map);
			break;
		case SOUP_MENU:
			list = new ArrayList<HashMap<String,Object>>();
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_016);
			map.put("name", "Æ¤µ°Çà¹ÏÌÀ");
			map.put("description", "ÃèÊö£ºÇåÌ¸¡¢ÏÊÏã");
			map.put("price", "8Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_017);
			map.put("name", "·¬ÇÑ¼¦µ°ÌÀ");
			map.put("description", "ÃèÊö£ºÅ¨ÏãËÄÒç");
			map.put("price", "8Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_018);
			map.put("name", "ÓñÃ×ÅÅ¹ÇÌÀ");
			map.put("description", "ÃèÊö£ºÓªÑøÃÀÎ¶");
			map.put("price", "15Ôª");
			list.add(map);
			break;
		case OTHER_MENU:
			list = new ArrayList<HashMap<String,Object>>();
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_019);
			map.put("name", "Á¹°èÈıË¿");
			map.put("description", "ÃèÊö£ºÂéÀ±");
			map.put("price", "10Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_020);
			map.put("name", "Öí¶ú¶ä");
			map.put("description", "ÃèÊö£ºÏã´à");
			map.put("price", "18Ôª");
			list.add(map);
			map = new HashMap<String, Object>();
			map.put("img", R.drawable.cp_021);
			map.put("name", "Åİ½··ï×¦");
			map.put("description", "ÃèÊö£ºÓĞÓĞ");
			map.put("price", "15Ôª");
			list.add(map);
			break;
		default:
			break;
		}
		return list;
	}
}
